函数定义默认值参数
  函数定义时，给形参设置默认值，只有与默认值不符的时候才需要传递实参
  def fun(a,b=10):#b称为默认值参数
      print(a,b)
  
  fun(100)
  fun(20,30)
  注：print的默认值是换行，(end='\t')
  
个数可变的位置参数：
  1.定义参数时，可能无法事先确定传递的位置实参的个数时，使用可变的位置参数。
  2.使用*定义个数可变的位置形参
  3.结果为一个元组
个数可变的关键字形参
  1.定义函数时，无法事先确定传递的关键字实参的个数时，使用可变的关键字形参。
  2.使用**定义个数可变的关键字形参。
  3.结果为一个字典
  
  def fun(*arg):
      print(arg)
      
  fun(a=10,b=20b,c=30)
  
  注：1.个数可变的位置参数和关键词参数只能有一个
      2.在一个函数的定义过程中，既有个数可变的关键字形参，也有个数可变的位置形参，要求：个数可变的位置形参放在个数可变的关键字形参之前。
      
      函数的调秀
      fun(10,20,30)#函数调用时的参数传递，称为位置传参
      lst=[11,22,33]
      fun(*lst)#在函数调用时，将列表中的每个元素都转换为位置实参传入
      print('-----------')
      fun{'a'=100，'b'=222,'c'=333}#函数的调用，所以是关键字实参
      dic={'a'=111,'b'=222,'c'=333}
      fun(**dic)#在函数调用时，将字典中的键值对都转换为关键字实参传入
      
      def fun(a,b,*,c,d)#*后必须用关键字形参
      
      变量的作用域：
          程序代码能访问该变量的区域
          根据变量的有效范围可分为：
            局部变量
                在函数内定义并使用的变量，只在函数内部有效，局部变量使用global声明，这个变量就会成为全局变量。
            全局变量
                函数体外定义的变量，可作用于函数内外。
                
   def fun (a,b):
       c=a+b   #c称为局部变量，因为c是在函数体内进行定义的变量，a，b为函数的形参，作用范围也是函数内部，相当于局部变量
       print(c)
       
   print(c)则会报错，因为a，c超出了起作用的范围（超出了作用域）
   
   name='杨老师'  #name的作用范围为函数内部和外部都可以使用，称为全局变量
   print(name)
   def fun2():
       print(name)
   fun2()
   
   def fun3():
        global age  #函数内部定义的变量，局部变量，使用global声明，这个变量实际上就变成了全局变量
   
   
   递归函数
     定义：
        如果在一个函数的函数体内调用了该函数本身，这个函数就称为递归函数
     组成：
        递归调用与递归终止条件
     递归的调用过程：
        每递归调用一次函数，都会在栈内存分配一个栈帧
        每执行完一次函数，都会释放相应的空间
     递归的优缺点
        缺点：占用内存多，效率低下
        优点：思路和代码简单
        
def fac(n):
    if n==1:
       return 1
    else:
       res=n*fac(n=1)
       return res
       
print(fac(6)) 
   
斐波那契数列：
def fib(n):   
   if n==1:
      return 1 
   elif n==2:
      return 1
   else:
       return fib(n-1)+fib(n-2)
       
 print(fib(6))      
 
 
 for i in range(1,10):     
     print(fib(i))           
                
